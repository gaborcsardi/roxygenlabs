% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/themed-rd.R
\name{theme}
\alias{theme}
\title{Theme R manual pages with roxygen2}
\description{
Theme R manual pages with roxygen2

\if{html}{\out{<link rel="stylesheet" type="text/css" href="../doc/assets/extra.css">}}

\if{html}{\out{<script src="../doc/assets/rd.js"></script>}}
}
\details{
The \verb{@theme} tag allows adding CSS and JS files to the HTML version of
the manual pages.

To support \verb{@theme}, you need to use the \code{roxygenlabs_rd} roclet. E.g.
add this to \code{DESCRIPTION}:\preformatted{Roxygen: \{ library(roxygenlabs); list(markdown = TRUE,
    roclets = c("collate", "namespace", "roxygenlabs_rd")) \}
}

and then use the \verb{@theme} tag to add CSS/JS files to \emph{all} manual pages.
Multiple file names can be specicified in a single \verb{@theme} tag, and
file names are relative to the \code{inst/doc} directory, within the package:\preformatted{#' @theme assets/extra.css assets/rd.js
}

See the \code{assets/extra.css} and \code{assets/rd.js} files, included in the
package, for an example CSS/JS theme that has the following changes
compared to plain Rd documentation:
\itemize{
\item R code is syntax-highlighted. This includes R code in the “Usage”
and “Examples” sections, R code created via “r” fences in roxygen’s
markdown, and R code chunks produced by roxygen’s \verb{@includeRmd} tag.
\item Add a “Copy” button to R code chunks, to copy them to the clipboard.
\item Headings have a new style, including a serif font.
\item More spacious formatting of arguments and list.
\item Restrict the width of the manual page, to avoid very long lines.
}
}
